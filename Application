import psycopg2

# Function to connect to the PostgreSQL database
def connect_to_db():
    try:
        connection = psycopg2.connect(
            user="your_username",
            password="your_password",
            host="localhost",
            port="1998",
            database="student_db"
        )
        return connection
    except psycopg2.Error as e:
        print("Error connecting to PostgreSQL database:", e)
        return None

# Function to retrieve and display all records from the students table
def get_all_students():
    try:
        connection = connect_to_db()
        cursor = connection.cursor()
        cursor.execute("SELECT * FROM students")
        students = cursor.fetchall()
        for student in students:
            print(student)
    except psycopg2.Error as e:
        print("Error fetching all students:", e)
    finally:
        if connection:
            cursor.close()
            connection.close()

# Function to insert a new student record into the students table
def add_student(first_name, last_name, email, enrollment_date):
    try:
        connection = connect_to_db()
        cursor = connection.cursor()
        cursor.execute("INSERT INTO students (first_name, last_name, email, enrollment_date) VALUES (%s, %s, %s, %s)", (first_name, last_name, email, enrollment_date))
        connection.commit()
        print("Student added successfully.")
    except psycopg2.Error as e:
        print("Error adding student:", e)
    finally:
        if connection:
            cursor.close()
            connection.close()

# Function to update the email address for a student with the specified student_id
def update_student_email(student_id, new_email):
    try:
        connection = connect_to_db()
        cursor = connection.cursor()
        cursor.execute("UPDATE students SET email = %s WHERE student_id = %s", (new_email, student_id))
        connection.commit()
        print("Email updated successfully.")
    except psycopg2.Error as e:
        print("Error updating email:", e)
    finally:
        if connection:
            cursor.close()
            connection.close()

# Function to delete the record of the student with the specified student_id
def delete_student(student_id):
    try:
        connection = connect_to_db()
        cursor = connection.cursor()
        cursor.execute("DELETE FROM students WHERE student_id = %s", (student_id,))
        connection.commit()
        print("Student deleted successfully.")
    except psycopg2.Error as e:
        print("Error deleting student:", e)
    finally:
        if connection:
            cursor.close()
            connection.close()

# Test functions
if __name__ == "__main__":
    # Test getAllStudents()
    print("All Students:")
    get_all_students()

    # Test addStudent()
    add_student("Armin", "Mozafari", "armin.mozafari@example.com", "2024-03-17")

    # Test updateStudentEmail()
    update_student_email(1, "john.doe.updated@example.com")

    # Test deleteStudent()
    delete_student(3)

    # Print all students after operations
    print("\nAll Students after operations:")
    get_all_students()
